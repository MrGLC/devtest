services:
  web:
    build: 
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./app:/app/app
    environment:
      - FLASK_APP=app/app.py
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/elevator_db
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=elevator_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  jupyter:
    build: 
      context: .
      dockerfile: docker/Dockerfile
    volumes:
      - .:/app
    ports:
      - "8888:8888"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/elevator_db
    depends_on:
      - db
    command: jupyter notebook --ip=0.0.0.0 --allow-root --NotebookApp.token=''

volumes:
  postgres_data: 